package test;

import com.disnodeteam.dogecv.detectors.roverrukus.GoldAlignDetector;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;


@TeleOp (name="Walnut",group="TeleOp")
public class Walnut extends LinearOpMode {
    @Override
    public void runOpMode() throws InterruptedException {


        DcMotor lScrew;
        DcMotor leftFront;
        DcMotor rightFront;
        DcMotor leftBack;
        DcMotor rightBack;
        float leftX;
        float leftY;
        float rightX;
        GoldAlignDetector detector;
        double LF;
        double RF;
        double LB;
        double RB;


        double power;

        leftFront = hardwareMap.dcMotor.get("LeftFront");
        leftBack = hardwareMap.dcMotor.get("LeftBack");
        rightFront = hardwareMap.dcMotor.get("RightFront");
        rightBack = hardwareMap.dcMotor.get("RightBack");

        rightBack.setDirection(DcMotorSimple.Direction.REVERSE);
        rightFront.setDirection(DcMotorSimple.Direction.REVERSE);


        waitForStart();
        leftX = -gamepad1.left_stick_x; // Reverse left joystick's X coordinate
        leftY = gamepad1.left_stick_y; // Reverse left joystick's Y coordinate
        rightX = -gamepad1.right_stick_x;
        double speed = Math.hypot(leftX, leftY); // Takes hypotenuse of leftX and leftY
        double angle = Math.atan2(leftY, leftX) - Math.PI / 4; // Calculates angle of direction

        LF = speed * Math.cos(angle)+rightX; // Calculates power for moving for the LF wheel
        LB = speed * Math.sin(angle)+rightX; // Calculates power for moving for the LB wheel
        RF = speed * Math.sin(angle)-rightX; // Calculates power for moving for the RF wheel
        RB = speed * Math.cos(angle)-rightX; // Calculates power for moving for the RB wheel

        leftFront.setPower(LF); // Gives power to LF wheels
        leftBack.setPower(LB); // Gives power to LB wheels
        rightFront.setPower(RF); // Gives power to RF wheels
        rightBack.setPower(RB); // Gives power to RB wheels
        // Add telemetry variables and updating them
        telemetry.addData("FrontLeftPower",LF);
        telemetry.addData("FrontRightPower",RF);
        telemetry.addData("BackLeftPower",LB);
        telemetry.addData("BackRightPower",RB);
        telemetry.addData("Encoders --","------");
        telemetry.addData("LeftFront",leftFront.getCurrentPosition());
        telemetry.addData("LeftBack",leftBack.getCurrentPosition());
        telemetry.addData("RightFront",rightFront.getCurrentPosition());
        telemetry.addData("RightBack",rightBack.getCurrentPosition());
        telemetry.update();

        while(opModeIsActive()){

        }

        

    }
}
